{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Tarun\\\\Desktop\\\\React Hooks\\\\dummy_react_hooks_project\\\\src\\\\components\\\\Ingredients\\\\navigationHeader.js\";\nimport React, { useState } from 'react';\nimport Card from '../UI/Card';\nimport './IngredientForm.css';\nimport LoadingIndicator from '../UI/LoadingIndicator';\nconst IngredientForm = React.memo(props => {\n  const [inputTitle, setInputTitle] = useState('');\n  const [inputAmount, setInputAmount] = useState('');\n\n  const submitHandler = event => {\n    event.preventDefault();\n    props.ingredientHandler({\n      title: inputTitle,\n      amount: inputAmount\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"section\", {\n    className: \"ingredient-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: submitHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-control\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }\n  }, \"Name\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    id: \"title\",\n    value: inputTitle,\n    onChange: event => setInputTitle(event.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-control\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"amount\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }\n  }, \"Amount\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"number\",\n    id: \"amount\",\n    value: inputAmount,\n    onChange: event => setInputAmount(event.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ingredient-form__actions\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }\n  }, \"Add Ingredient\"), props.loading && /*#__PURE__*/React.createElement(LoadingIndicator, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 31\n    }\n  })))));\n});\nexport default IngredientForm;","map":{"version":3,"sources":["C:/Users/Tarun/Desktop/React Hooks/dummy_react_hooks_project/src/components/Ingredients/navigationHeader.js"],"names":["React","useState","Card","LoadingIndicator","IngredientForm","memo","props","inputTitle","setInputTitle","inputAmount","setInputAmount","submitHandler","event","preventDefault","ingredientHandler","title","amount","target","value","loading"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AAEA,OAAOC,IAAP,MAAiB,YAAjB;AACA,OAAO,sBAAP;AACA,OAAOC,gBAAP,MAA6B,wBAA7B;AAEA,MAAMC,cAAc,GAAGJ,KAAK,CAACK,IAAN,CAAWC,KAAK,IAAI;AACxC,QAAM,CAAEC,UAAF,EAAcC,aAAd,IAAgCP,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAAEQ,WAAF,EAAeC,cAAf,IAAiCT,QAAQ,CAAC,EAAD,CAA/C;;AAED,QAAMU,aAAa,GAAGC,KAAK,IAAI;AAC7BA,IAAAA,KAAK,CAACC,cAAN;AACAP,IAAAA,KAAK,CAACQ,iBAAN,CAAwB;AAACC,MAAAA,KAAK,EAACR,UAAP;AAAmBS,MAAAA,MAAM,EAACP;AAA1B,KAAxB;AACD,GAHD;;AAKA,sBACE;AAAS,IAAA,SAAS,EAAC,iBAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAM,IAAA,QAAQ,EAAEE,aAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAO,IAAA,OAAO,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,EAAE,EAAC,OAAtB;AAA8B,IAAA,KAAK,EAAEJ,UAArC;AACC,IAAA,QAAQ,EAAEK,KAAK,IAAIJ,aAAa,CAACI,KAAK,CAACK,MAAN,CAAaC,KAAd,CADjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF,eAME;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAO,IAAA,OAAO,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAO,IAAA,IAAI,EAAC,QAAZ;AAAqB,IAAA,EAAE,EAAC,QAAxB;AAAiC,IAAA,KAAK,EAAET,WAAxC;AACC,IAAA,QAAQ,EAAEG,KAAK,IAAIF,cAAc,CAACE,KAAK,CAACK,MAAN,CAAaC,KAAd,CADlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CANF,eAWE;AAAK,IAAA,SAAS,EAAC,0BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,EAEGZ,KAAK,CAACa,OAAN,iBAAiB,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFpB,CAXF,CADF,CADF,CADF;AAsBD,CA/BsB,CAAvB;AAiCA,eAAef,cAAf","sourcesContent":["import React, {useState} from 'react';\n\nimport Card from '../UI/Card';\nimport './IngredientForm.css';\nimport LoadingIndicator from '../UI/LoadingIndicator';\n\nconst IngredientForm = React.memo(props => {\n   const [ inputTitle, setInputTitle ] = useState('');\n   const [ inputAmount, setInputAmount] = useState('');\n\n  const submitHandler = event => {\n    event.preventDefault();\n    props.ingredientHandler({title:inputTitle, amount:inputAmount})\n  };\n\n  return (\n    <section className=\"ingredient-form\">\n      <Card>\n        <form onSubmit={submitHandler}>\n          <div className=\"form-control\">\n            <label htmlFor=\"title\">Name</label>\n            <input type=\"text\" id=\"title\" value={inputTitle}\n             onChange={event => setInputTitle(event.target.value)}/>\n          </div>\n          <div className=\"form-control\">\n            <label htmlFor=\"amount\">Amount</label>\n            <input type=\"number\" id=\"amount\" value={inputAmount}\n             onChange={event => setInputAmount(event.target.value)}/>\n          </div>\n          <div className=\"ingredient-form__actions\">\n            <button type=\"submit\">Add Ingredient</button>\n            {props.loading && <LoadingIndicator/>}\n          </div>\n        </form>\n      </Card>\n    </section>\n  );\n});\n\nexport default IngredientForm;\n"]},"metadata":{},"sourceType":"module"}