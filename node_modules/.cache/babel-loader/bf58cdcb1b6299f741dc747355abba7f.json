{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Tarun\\\\Desktop\\\\React Hooks\\\\dummy_react_hooks_project\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport UserList from './components/UI/userList';\nimport ListProgress from './components/UI/ListProgress';\nimport ModalPopUp from './components/modalPopup/ModalPopUp';\nimport './App.css';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      showModal: false,\n      orderForm: {\n        Fullname: {\n          elementType: 'input',\n          elementConfig: {\n            type: 'text',\n            placeholder: 'Your Name'\n          },\n          value: ''\n        },\n        DOB: {\n          elementType: 'input',\n          elementConfig: {\n            type: 'text',\n            placeholder: 'DOB'\n          },\n          value: ''\n        },\n        Languages: {\n          elementType: 'select',\n          elementConfig: {\n            options: [{\n              value: 'English',\n              displayValue: 'English'\n            }, {\n              value: 'Hindi',\n              displayValue: 'Hindi'\n            }]\n          },\n          value: ''\n        },\n        Gender: {\n          elementType: 'select',\n          elementConfig: {\n            options: [{\n              value: 'Male',\n              displayValue: 'Male'\n            }, {\n              value: 'Female',\n              displayValue: 'Female'\n            }]\n          },\n          value: ''\n        },\n        About: {\n          elementType: 'input',\n          elementConfig: {\n            type: 'text',\n            placeholder: 'About'\n          },\n          value: ''\n        }\n      }\n    };\n\n    this.showModal = () => {\n      this.setState({\n        showModal: true\n      });\n    };\n\n    this.handleclose = () => {\n      this.setState({\n        showModal: false\n      });\n    };\n  }\n\n  render() {\n    const formElementsArray = [];\n\n    for (let key in this.state.orderForm) {\n      formElementsArray.push({\n        id: key,\n        config: this.state.orderForm[key]\n      });\n    }\n\n    let form = /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.orderHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 13\n      }\n    }, formElementsArray.map(formElement => /*#__PURE__*/React.createElement(Input, {\n      key: formElement.id,\n      elementType: formElement.config.elementType,\n      elementConfig: formElement.config.elementConfig,\n      value: formElement.config.value,\n      changed: event => this.inputChangedHandler(event, formElement.id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(Button, {\n      btnType: \"Success\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }\n    }, \"ORDER\"));\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(ModalPopUp, {\n      show: this.state.showModal,\n      formEleArr: this.state.orderForm,\n      handleclose: this.handleclose,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"leftCol col-md-9\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(UserList, {\n      click: this.showModal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"rightCol col-md-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(ListProgress, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 13\n      }\n    }))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/Tarun/Desktop/React Hooks/dummy_react_hooks_project/src/App.js"],"names":["React","Component","UserList","ListProgress","ModalPopUp","App","state","showModal","orderForm","Fullname","elementType","elementConfig","type","placeholder","value","DOB","Languages","options","displayValue","Gender","About","setState","handleclose","render","formElementsArray","key","push","id","config","form","orderHandler","map","formElement","event","inputChangedHandler"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\n\nimport UserList from './components/UI/userList';\nimport ListProgress from './components/UI/ListProgress';\nimport ModalPopUp from './components/modalPopup/ModalPopUp'\n\nimport './App.css';\n\n\nclass App extends Component {\n  state={\n    showModal:false,\n    orderForm: {\n      Fullname: {\n          elementType: 'input',\n          elementConfig: {\n              type: 'text',\n              placeholder: 'Your Name'\n          },\n          value: ''\n      },\n      DOB: {\n          elementType: 'input',\n          elementConfig: {\n              type: 'text',\n              placeholder: 'DOB'\n          },\n          value: ''\n      },\n      Languages: {\n          elementType: 'select',\n          elementConfig: {\n              options: [\n                  {value: 'English', displayValue: 'English'},\n                  {value: 'Hindi', displayValue: 'Hindi'}\n              ]\n          },\n          value: ''\n      },\n      Gender: {\n        elementType: 'select',\n        elementConfig: {\n            options: [\n                {value: 'Male', displayValue: 'Male'},\n                {value: 'Female', displayValue: 'Female'}\n            ]\n        },\n        value: ''\n    },\n    About: {\n      elementType: 'input',\n      elementConfig: {\n          type: 'text',\n          placeholder: 'About'\n      },\n      value: ''\n  },\n  },\n  }\n\n  showModal =()=>{\n     this.setState({showModal:true});\n  }\n\n  handleclose =()=>{\n    this.setState({showModal:false});\n  }\n\n  render(){\n    const formElementsArray = [];\n        for (let key in this.state.orderForm) {\n            formElementsArray.push({\n                id: key,\n                config: this.state.orderForm[key]\n            });\n        }\n        let form = (\n            <form onSubmit={this.orderHandler}>\n                {formElementsArray.map(formElement => (\n                    <Input \n                        key={formElement.id}\n                        elementType={formElement.config.elementType}\n                        elementConfig={formElement.config.elementConfig}\n                        value={formElement.config.value}\n                        changed={(event) => this.inputChangedHandler(event, formElement.id)} />\n                ))}\n                <Button btnType=\"Success\">ORDER</Button>\n            </form>\n        );\n    return(\n      <div className=\"container\">\n        <div className=\"row\">\n          <ModalPopUp show={this.state.showModal} formEleArr={this.state.orderForm} handleclose={this.handleclose}/>\n          <div className=\"leftCol col-md-9\">\n              <UserList click={this.showModal}/>\n          </div>\n          <div className=\"rightCol col-md-3\">\n            <ListProgress/>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}