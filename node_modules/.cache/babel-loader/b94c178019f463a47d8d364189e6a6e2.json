{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Tarun\\\\Desktop\\\\React Hooks\\\\dummy_react_hooks_project\\\\src\\\\components\\\\Ingredients\\\\Ingredients.js\";\nimport React, { useState } from 'react';\nimport IngredientForm from './IngredientForm';\nimport Search from './Search';\nimport IngredientsList from './IngredientList';\n\nconst Ingredients = () => {\n  const [userIngredients, setUserIngredients] = useState([]);\n\n  const ingredientSubmitHandler = ingredients => {\n    setUserIngredients(prevIngredients => [...prevIngredients, {\n      id: Math.random().toString(),\n      ...ingredients\n    }]);\n  };\n\n  const removeHandler = id => {\n    let idx = ingredients.findIndex(el => el.id === id);\n    ingredients.splice(idx, 1);\n    setUserIngredients([...ingredients]);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(IngredientForm, {\n    ingredientHandler: ingredientSubmitHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Search, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(IngredientsList, {\n    ingredients: userIngredients,\n    onRemoveItem: removeHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default Ingredients;","map":{"version":3,"sources":["C:/Users/Tarun/Desktop/React Hooks/dummy_react_hooks_project/src/components/Ingredients/Ingredients.js"],"names":["React","useState","IngredientForm","Search","IngredientsList","Ingredients","userIngredients","setUserIngredients","ingredientSubmitHandler","ingredients","prevIngredients","id","Math","random","toString","removeHandler","idx","findIndex","el","splice"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AAEA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,eAAP,MAA4B,kBAA5B;;AAEA,MAAMC,WAAW,GAAE,MAAM;AACvB,QAAM,CAAEC,eAAF,EAAmBC,kBAAnB,IAAyCN,QAAQ,CAAC,EAAD,CAAvD;;AAEA,QAAMO,uBAAuB,GAAKC,WAAF,IAAkB;AAC9CF,IAAAA,kBAAkB,CAAEG,eAAe,IAAI,CAAC,GAAGA,eAAJ,EAAqB;AAACC,MAAAA,EAAE,EAACC,IAAI,CAACC,MAAL,GAAcC,QAAd,EAAJ;AAA8B,SAAGL;AAAjC,KAArB,CAArB,CAAlB;AACH,GAFD;;AAIA,QAAMM,aAAa,GAAKJ,EAAF,IAAS;AAC7B,QAAIK,GAAG,GAAGP,WAAW,CAACQ,SAAZ,CAAuBC,EAAE,IAAIA,EAAE,CAACP,EAAH,KAAUA,EAAvC,CAAV;AACAF,IAAAA,WAAW,CAACU,MAAZ,CAAmBH,GAAnB,EAAwB,CAAxB;AACAT,IAAAA,kBAAkB,CAAC,CAAC,GAAGE,WAAJ,CAAD,CAAlB;AACH,GAJC;;AAKA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,cAAD;AAAgB,IAAA,iBAAiB,EAAID,uBAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,eAAD;AAAiB,IAAA,WAAW,EAAIF,eAAhC;AAAiD,IAAA,YAAY,EAAGS,aAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CAHF,CADF;AAUD,CAtBD;;AAwBA,eAAeV,WAAf","sourcesContent":["import React, {useState} from 'react';\n\nimport IngredientForm from './IngredientForm';\nimport Search from './Search';\nimport IngredientsList from './IngredientList';\n\nconst Ingredients= () => {\n  const [ userIngredients, setUserIngredients] = useState([]);\n\n  const ingredientSubmitHandler = ( ingredients ) =>{\n      setUserIngredients( prevIngredients => [...prevIngredients, {id:Math.random().toString(), ...ingredients}])\n  }\n\n  const removeHandler = ( id ) =>{\n    let idx = ingredients.findIndex( el => el.id === id);\n    ingredients.splice(idx, 1);\n    setUserIngredients([...ingredients]);\n}\n  return (\n    <div className=\"App\">\n      <IngredientForm ingredientHandler = {ingredientSubmitHandler}/>\n\n      <section>\n        <Search />\n        <IngredientsList ingredients = {userIngredients} onRemoveItem ={removeHandler}/>\n      </section>\n    </div>\n  );\n}\n\nexport default Ingredients;\n"]},"metadata":{},"sourceType":"module"}